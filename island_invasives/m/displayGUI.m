clear, clc, close all
%  Create and then hide the GUI as it is being constructed.
f = figure('Visible','off','Position',[260,400,650,485]);
set(f,'toolbar','figure')

%  Construct the components.
S.H.text = uicontrol('Style','text','String','Numerical Estimation of Rodenticide Dispersal',...
    'Units','normalized','Position',[.05,.9,.93,.06],'FontSize',14,'HorizontalAlignment','center');
S.H.session = uicontrol('Style','pushbutton','String','Session',...
    'Units','normalized','Position',[.05,.8,.2,.05],...
    'Callback','S = setSessionDlg(S);');
S.H.input = uicontrol('Style','pushbutton','String','Input data files',...
    'Units','normalized','Position',[.05,.7,.2,.05],...
    'Callback','S = setInputDlg(S);');
S.H.coastline = uicontrol('Style','pushbutton','String','Coastline files',...
    'Units','normalized','Position',[.05,.6,.2,.05],...
    'Callback','S = setCoastlineDlg(S);');
S.H.output = uicontrol('Style','pushbutton',...
    'String','Output folder',...
    'Units','normalized','Position',[.05,.4,.2,.05],...
    'Callback','S = setOutputDlg(S);');

S.H.visibleTrajectory = uicontrol('Style','checkbox','String','Helicopter''s Path',...
    'Units','normalized','Position',[.05,.25,.2,.02],...
    'Value',1,'Visible','Off',...
    'callback','if get(S.H.visibleTrajectory,''value'')==1, visible=''on''; else, visible=''off''; end, set(S.H.trajectory,''visible'',visible), uistack(S.H.trajectory, ''top'')');
S.H.visibleLogging_on = uicontrol('Style','checkbox','String','Treated points',...
    'Units','normalized','Position',[.05,.22,.2,.02],...
    'Value',1,'Visible','Off',...
    'callback','if get(S.H.visibleLogging_on,''value'')==1, visible=''on''; else, visible=''off''; end, set(S.H.logging_on,''visible'',visible), uistack(S.H.logging_on, ''top'')');
S.H.visibleNode = uicontrol('Style','checkbox','String','Strip cells',...
    'Units','normalized','Position',[.05,.19,.2,.02],...
    'Value',1,'Visible','Off',...
    'callback','if get(S.H.visibleNode,''value'')==1, visible=''on''; else, visible=''off''; end, set(S.H.node,''visible'',visible), uistack(S.H.node, ''top'')');
S.H.visibleDensity = uicontrol('Style','checkbox','String','Estimated density',...
    'Units','normalized','Position',[.05,.16,.2,.02],...
    'Value',1,'Visible','Off',...
    'callback','if get(S.H.visibleDensity,''value'')==1, visible=''on''; else, visible=''off''; end, set(S.H.density,''visible'',visible), uistack(S.H.density, ''top'')');
S.H.visibleCoastlinePolygon = uicontrol('Style','checkbox','String','Coastline',...
    'Units','normalized','Position',[.05,.13,.2,.02],...
    'Value',1,'Visible','Off',...
    'callback','if get(S.H.visibleCoastlinePolygon,''value'')==1, visible=''on''; else, visible=''off''; end, set(S.H.coastlinePolygon,''visible'',visible), uistack(S.H.coastlinePolygon, ''top'')');
S.H.visibleTransect = uicontrol('Style','checkbox','String','Transects',...
    'Units','normalized','Position',[.05,.10,.2,.02],...
    'Value',1,'Visible','Off',...
    'callback','if get(S.H.visibleTransect,''value'')==1, visible=''on''; else, visible=''off''; end, set(S.H.transect,''visible'',visible), uistack(S.H.transect, ''top'')');
S.H.measureTool = uicontrol('Style','togglebutton','String','Measuring tool',...
    'Units','normalized','Position',[.05,.06,.2,.03],...
    'Visible','Off',...
    'callback','if get(S.H.measureTool,''value'')==1, h=[]; pos=[]; fncStr=''[h,pos,S.Status]=measureTool(h,pos,S.Status);''; else, delete(h); fncStr=''''; end, set(gcf,''WindowButtonDownFcn'',fncStr)');

S.H.run = uicontrol('Style','pushbutton','String','Run',...
    'Units','normalized','Position',[.8,.05,.15,.05],...
    'Callback','S = calculate(S);');
    
% Assign the GUI a name to appear in the window title.
set(f,'Name','Grupo de Ecología y Conservación de Islas, A.C.')
% Move the GUI to the center of the screen.
movegui(f,'center')
% Make the GUI visible.
set(f,'Visible','on');


S.Name='';
filename = strcat([pwd filesep],datestr(now,30));
sessionFile = [filename '_nerd.mat'];
S.SessionFile = sessionFile;
dInput = dir('*Track2D*.shp');
filesInput = strcat([pwd filesep],{dInput(~[dInput.isdir]).name});
S.InputFiles = filesInput;
dCoastline = dir('lcosta*.shp');
filesCoastline = strcat([pwd filesep],{dCoastline(~[dCoastline.isdir]).name});
S.CoastlineFiles = filesCoastline;
S.OutputFolder = pwd;
S.Status=S.H.text;
S.StripeWidth=65;
